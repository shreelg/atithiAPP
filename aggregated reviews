Aggregated review: 

import pandas as pd
import re

def aggregate_reviews_from_csv(filename='google_reviews.csv'):

    df = pd.read_csv(filename)
  
    all_reviews = ' '.join(df['text'])
    return all_reviews

def clean_and_format_review(review_text):
   
    review_text_cleaned = re.sub(r'\s+', ' ', review_text)
    review_text_cleaned = re.sub(r'([.!?])(\w)', r'\1 \2', review_text_cleaned)
    review_text_cleaned = review_text_cleaned.strip().capitalize()
    return review_text_cleaned

def filter_non_essential_reviews(review_text):
   
    non_essential_keywords = ['extra', 'small', 'little', 'rice', 'gave me', 'minor', 'tiny', 'slight']
  
    sentences = re.split(r'(?<=[.!?]) +', review_text)
   
    essential_sentences = [sentence for sentence in sentences if not any(kw in sentence.lower() for kw in non_essential_keywords)]
    return essential_sentences

def summarize_reviews(essential_sentences, max_sentences=3):
   
    limited_summary = ' '.join(essential_sentences[:max_sentences])
    return limited_summary

def save_summary_to_csv(summary, filename='summarized_reviews.csv'):

    df_summary = pd.DataFrame({'summarized_review': [summary]})
  
    df_summary.to_csv(filename, index=False)
    print(f"Summary saved to {filename}")

def main():

    aggregated_reviews = aggregate_reviews_from_csv()
  
    essential_sentences = filter_non_essential_reviews(aggregated_reviews)
    
    summarized_review = summarize_reviews(essential_sentences, max_sentences=3)
   
    legible_review = clean_and_format_review(summarized_review)

    print("AGG Review:")
    print(legible_review)

    save_summary_to_csv(legible_review)

if __name__ == '__main__':
    main()
